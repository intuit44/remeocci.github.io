// SCRIPT PARA VERIFICAR SINTAXIS DE index.js

// 1. VERIFICAR LLAVES BALANCEADAS - Ejecutar en PowerShell:
// Get-Content index.js | ForEach-Object { ($_ -split '{').Count - 1 } | Measure-Object -Sum
// Get-Content index.js | ForEach-Object { ($_ -split '}').Count - 1 } | Measure-Object -Sum
// Los n√∫meros deben ser iguales

// 2. ERRORES COMUNES EN LAS MODIFICACIONES RECIENTES:

// PROBLEMA 1: Funci√≥n procesarMensaje mal cerrada
// BUSCAR AL FINAL DE la funci√≥n procesarMensaje:
async procesarMensaje(message) {
    // ... todo el c√≥digo de la funci√≥n ...
    
    // ‚ùå PUEDE QUE FALTE ESTO AL FINAL:
} // ‚Üê Cerrar funci√≥n procesarMensaje

// PROBLEMA 2: Bloque if/else mal cerrado
// BUSCAR esta secci√≥n y verificar llaves:
if (esElegibleParaGPT) {
    if (esGrupo || esPersonalAutorizado) {
        try {
            // ... c√≥digo ...
        } catch (error) {
            // ... manejo de error ...
        }
    } else {
        console.log(`üö´ Mensaje elegible para GPT pero de persona no autorizada: ${nombreContacto}`);
    }
} else {
    // ... mensajes no elegibles ...
} // ‚Üê Verificar que esta llave est√© presente

// PROBLEMA 3: Clase BotWhatsAppPlayMall mal cerrada
// BUSCAR AL FINAL de la clase:
class BotWhatsAppPlayMall {
    constructor() {
        // ...
    }
    
    // ... todos los m√©todos ...
    
    manejarError(error) {
        // ... √∫ltimo m√©todo ...
    }
} // ‚Üê Debe cerrar la clase

// PROBLEMA 4: Funci√≥n ejecutar_funcion_operativa mal cerrada
async function ejecutar_funcion_operativa(texto, numero) {
    return new Promise((resolve, reject) => {
        // ... c√≥digo ...
        
        proceso.on('error', (error) => {
            console.error('‚ùå Error ejecutando Python:', error);
            reject(error);
        });

        setTimeout(() => {
            proceso.kill('SIGTERM');
            reject(new Error('Timeout: Python tard√≥ m√°s de 30 segundos'));
        }, 30000);
    }); // ‚Üê Promise
} // ‚Üê Funci√≥n

// PROBLEMA 5: C√≥digo al final del archivo
const bot = new BotWhatsAppPlayMall();
bot.iniciarBot().catch((error) => {
    console.error('‚ùå Error fatal iniciando bot:', error);
    process.exit(1);
}); // ‚Üê Verificar punto y coma

// 3. SCRIPT DE VERIFICACI√ìN AUTOM√ÅTICA
const fs = require('fs');

function verificarSintaxis() {
    try {
        const codigo = fs.readFileSync('index.js', 'utf8');
        
        // Contar llaves
        const abiertas = (codigo.match(/\{/g) || []).length;
        const cerradas = (codigo.match(/\}/g) || []).length;
        
        console.log(`Llaves abiertas: ${abiertas}`);
        console.log(`Llaves cerradas: ${cerradas}`);
        
        if (abiertas !== cerradas) {
            console.log(`‚ùå ERROR: Faltan ${abiertas - cerradas} llaves de cierre`);
        } else {
            console.log(`‚úÖ Llaves balanceadas`);
        }
        
        // Verificar par√©ntesis
        const parentesisAbiertas = (codigo.match(/\(/g) || []).length;
        const parentesisCerradas = (codigo.match(/\)/g) || []).length;
        
        console.log(`Par√©ntesis abiertos: ${parentesisAbiertas}`);
        console.log(`Par√©ntesis cerrados: ${parentesisCerradas}`);
        
        if (parentesisAbiertas !== parentesisCerradas) {
            console.log(`‚ùå ERROR: Faltan ${parentesisAbiertas - parentesisCerradas} par√©ntesis de cierre`);
        } else {
            console.log(`‚úÖ Par√©ntesis balanceados`);
        }
        
        // Verificar corchetes
        const corchetesAbiertos = (codigo.match(/\[/g) || []).length;
        const corchetesCerrados = (codigo.match(/\]/g) || []).length;
        
        if (corchetesAbiertos !== corchetesCerrados) {
            console.log(`‚ùå ERROR: Faltan ${corchetesAbiertos - corchetesCerrados} corchetes de cierre`);
        } else {
            console.log(`‚úÖ Corchetes balanceados`);
        }
        
    } catch (error) {
        console.log(`‚ùå Error leyendo archivo: ${error.message}`);
    }
}

// Ejecutar verificaci√≥n
// verificarSintaxis();

// 4. TEMPLATE DE LA ESTRUCTURA CORRECTA FINAL DE index.js
/*
class BotWhatsAppPlayMall {
    constructor() {
        // constructor code
    }
    
    cargarPersonalAutorizado() {
        // method code
    }
    
    async procesarMensaje(message) {
        // method code
        
        if (condicion) {
            // code
        } else {
            // code
        }
    } // ‚Üê Cerrar m√©todo
    
    async iniciarBot() {
        // method code
    }
    
    // ... otros m√©todos ...
    
    async manejarError(error) {
        // √∫ltimo m√©todo
    }
} // ‚Üê Cerrar clase

// Funciones fuera de la clase
async function ejecutar_funcion_operativa(texto, numero) {
    return new Promise((resolve, reject) => {
        // Promise code
    }); // ‚Üê Cerrar Promise
} // ‚Üê Cerrar funci√≥n

// Manejo de se√±ales
process.on('SIGINT', async () => {
    console.log('\nüëã Cerrando bot gracefully...');
    process.exit(0);
});

// ... otros process.on ...

// Inicializaci√≥n final
const bot = new BotWhatsAppPlayMall();
bot.iniciarBot().catch((error) => {
    console.error('‚ùå Error fatal iniciando bot:', error);
    process.exit(1);
});
*/